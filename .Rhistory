fontsize_row = 5,
border_color = NA,
na_col = "white", cluster_rows = T, cluster_cols = F,
labels_col = c(set.cond1, set.cond2, "APH1000nM/DMSO"),
)
kdms_line <- kdms[, c("names_site", "a.normalized.limma.mean", "b.normalized.limma.mean", "d.normalized.limma.mean")]
kdms_line <- gather(kdms_line, names_site)
library(dplyr)
kdms_line <- gather(kdms_line, names_site)
library(tidyverse)
kdms_line <- gather(kdms_line, names_site)
View(kdms_line)
kdms_line <- gather(kdms_line, treatment)
View(kdms_line)
kdms_line <- gather(kdms_line, names_site)
rownames(kdms_line) <- c("treatment", "fc")
View(kdms_line)
kdms_line <- kdms[, c("names_site", "a.normalized.limma.mean", "b.normalized.limma.mean", "d.normalized.limma.mean")]
kdms_line <- gather(kdms_line, names_site)
rownames(kdms_line) <- c("treatment", "fc")
View(kdms_line)
colnames(kdms_line) <- c("treatment", "fc")
ggplot(kdms_line, aes(x=treatment, y=fc))+
geom_line()+
geom_point()
ggplot(kdms_line, aes(x=treatment, y=fc, group=1))+
geom_line()+
geom_point()
kdms_sub <- kdms[, c("names_site", "a.normalized.limma.mean", "b.normalized.limma.mean", "d.normalized.limma.mean")]
kdms_sites <- gather(kdms_line, kdms_sub[, "names_site"]
kdms_sites <- gather(kdms_line, kdms_sub[, "names_site"])
kdms_sites <- gather(kdms_line, kdms_sub[, "names_site"])
kdms_sites <- gather(kdms_sub, a.normalized.limma.mean)
View(kdms_sites)
kdms_sites <- gather(kdms_sub, names_site)
View(kdms_sites)
kdms_line$site <- c(kdms_sub$names_site, kdms_sub$names_site, kdms_sub$names_site)
View(kdms_line)
ggplot(kdms_line, aes(x=treatment, y=fc, group=site))+
geom_line()+
geom_point()
brca <- subset(sites, names=="BRCA1")
brca <- subset(sites, names=="BRCA1")
brca_sub <- brca[, c("names_site", "a.normalized.limma.mean", "b.normalized.limma.mean", "d.normalized.limma.mean")]
brca_line <- gather(brca_sub, names_site)
colnames(brca_line) <- c("treatment", "fc")
brca_line$site <- c(brca_sub$names_site, brca_sub$names_site, brca_sub$names_site)
brca_line$gene <- "BRCA1"
kdms_line$gene <- "KDMS"
ggplot(kdms_line, aes(x=treatment, y=fc, group=site, color=gene))+
geom_line()+
geom_point()
kdms_brca <- rbind(kdms_line, brca_line)
ggplot(kdms_brca, aes(x=treatment, y=fc, group=site, color=gene))+
geom_line()+
geom_point()
ggplot(kdms_brca, aes(x=treatment, y=fc, group=site, color=gene))+
geom_line()+
geom_point()+
scale_color_im()
ggplot(kdms_brca, aes(x=treatment, y=fc, group=site, color=gene, alpha=gene))+
geom_line()+
geom_point()+
scale_color_im()
ggplot(kdms_brca, aes(x=treatment, y=fc, group=site, color=gene))+
geom_line()+
geom_point()+
scale_color_im("discrete1")
impalettes <- list(
main  = imcols::im_cols("Chevalier3", "Dutch1", "Halifax1", "Lake2", "Lake3", "Lumina2", "Mint1", "Pale1", "Pine1", "Pine3", "Rush2", "Silver3", "Silver4"),
discrete1 = imcols::im_cols("Chevalier3", "Rush1", "Lake3", "Pine1", "Lumina2", "Silver4"),
discrete2 = imcols::im_cols("Chevalier3", "Rush1", "Lake3", "Pine1"),
heatmap1 = imcols::im_cols("Lake3", "Lake4","white", "Chevalier1", "Rush3"),
heatmap2  = imcols::im_cols("Lake3", "Chevalier3", "Rush2"),
heatmap3  = imcols::im_cols("Lake3", "Pale2", "Dutch1"),
heatmap4 = imcols::im_cols("Lake3", "white", "Rush3"),
heatmap_hot = imcols::im_cols("white", "Rush3"),
heatmap_cool = imcols::im_cols("Lake3", "white")
)
ggplot(kdms_brca, aes(x=treatment, y=fc, group=site, color=gene))+
geom_line()+
geom_point()+
scale_color_im("discrete2")
ggplot(kdms_brca, aes(x=treatment, y=fc, group=site, color=gene))+
geom_line()+
geom_point()+
scale_color_manual(values = im_cols(1, 5))
ggplot(kdms_brca, aes(x=treatment, y=fc, group=site, color=gene))+
geom_line()+
geom_point()+
scale_color_manual(values = im_cols(1))
ggplot(kdms_brca, aes(x=treatment, y=fc, group=site, color=gene))+
geom_line()+
geom_point()+
scale_color_manual(values = c(im_cols(1,2)))
ggplot(kdms_brca, aes(x=treatment, y=fc, group=site, color=gene))+
geom_line()+
geom_point()+
scale_color_manual(values = c(im_cols(1), im_cols(5)))
impalettes <- list(
main  = imcols::im_cols("Chevalier3", "Dutch1", "Halifax1", "Lake2", "Lake3", "Lumina2", "Mint1", "Pale1", "Pine1", "Pine3", "Rush2", "Silver3", "Silver4"),
discrete1 = imcols::im_cols("Chevalier3", "Rush1", "Lake3", "Pine1", "Lumina2", "Silver4"),
discrete2 = imcols::im_cols("Chevalier3", "Rush1", "Lake3", "Pine1"),
discrete_two_colors= imcols::im_cols( "Rush1", "Lake3"),
heatmap1 = imcols::im_cols("Lake3", "Lake4","white", "Chevalier1", "Rush3"),
heatmap2  = imcols::im_cols("Lake3", "Chevalier3", "Rush2"),
heatmap3  = imcols::im_cols("Lake3", "Pale2", "Dutch1"),
heatmap4 = imcols::im_cols("Lake3", "white", "Rush3"),
heatmap_hot = imcols::im_cols("white", "Rush3"),
heatmap_cool = imcols::im_cols("Lake3", "white")
)
ggplot(kdms_brca, aes(x=treatment, y=fc, group=site, color=gene))+
geom_line()+
geom_point()+
scale_color_im("discrete_two_colors")
ggplot(kdms_brca, aes(x=treatment, y=fc, group=site, color=gene))+
geom_line()+
geom_point()+
scale_color_im("discrete_two_colors")+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
strip.background = element_blank())
ggplot(kdms_brca, aes(x=treatment, y=fc, group=site, color=gene))+
geom_line()+
geom_point()+
scale_color_im("discrete_two_colors")+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
strip.background = element_blank())
dev.copy2pdf(file="figures/kdm2-3_sites_brca1.pdf")
ggplot(kdms_brca, aes(x=treatment, y=fc, group=site, color=gene))+
geom_line(aes(linetype=gene))+
geom_point()+
scale_color_im("discrete_two_colors")+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
strip.background = element_blank())
ggplot(kdms_brca, aes(x=treatment, y=fc, group=site, color=gene))+
geom_line(aes(linetype=gene))+
geom_point()+
scale_color_im("discrete_two_colors")+
scale_linetype_manual(values=c("twodash", "dotted"))+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
strip.background = element_blank())
ggplot(kdms_brca, aes(x=treatment, y=fc, group=site, color=gene))+
geom_line(aes(linetype=gene))+
geom_point()+
scale_color_im("discrete_two_colors")+
scale_linetype_manual(values=c("twodash", "solid"))+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
strip.background = element_blank())
ggplot(kdms_brca, aes(x=treatment, y=fc, group=site, color=gene))+
geom_line(aes(linetype=gene))+
geom_point()+
scale_color_im("discrete_two_colors")+
scale_linetype_manual(values=c("twodash", "solid"))+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
strip.background = element_blank())
dev.copy2pdf(file="figures/kdm2-3_sites_brca1.pdf")
regulated$short.motif
regulated$motif <- substr(regulated$short.motif, 6, 7)
regulated$motif
stq <- subset(regulated, motif=="SQ" | motif=="TQ")
stq_heat <- stq[,c("a.normalized.limma.mean", "b.normalized.limma.mean", "d.normalized.limma.mean")]
rownames(stq_heat) <- stq$names_site
rownames(stq_heat) <- stq$names_id
rownames(stq_heat) <- stq$id
rownames(stq_heat) <- paste0(stq$names_site, stq$Sequence.window)
stq_heat <- unique(stq)
stq_heat <- unique(stq_heat)
stq_heat <- unique(stq_heat$names_site)
stq_heat <- unique(stq$names_site)
rownames(stq_heat) <- colnames(stq[,1:50])
rownames(stq_heat) <- stq[,1:50]
rownames(stq_heat) <- paste0(stq[,1:50]=
rownames(stq_heat) <- paste0(stq[,1:50])
rownames(stq_heat) <- paste0(rownames(stq), stq$names_site)
rownames(stq_heat) <- paste0(rownames(stq), stq$names_site)
stq_heat <- stq[,c("names_site", "a.normalized.limma.mean", "b.normalized.limma.mean", "d.normalized.limma.mean")]
rownames(stq_heat) <- paste0(rownames(stq), stq$names_site)
paletteLength <- 100
myBreaks <- c(seq(min(stq_heat, na.rm=T), 0, length.out=ceiling(paletteLength/2)+1),
seq(max(stq_heat, na.rm=T)/paletteLength, max(stq_heat, na.rm=T), length.out=floor(paletteLength/2)))
stq_heat <- stq[, 2:4]
stq_heat <- stq_heat[, 2:4]
stq <- subset(regulated, motif=="SQ" | motif=="TQ")
stq_heat <- stq[,c("names_site", "a.normalized.limma.mean", "b.normalized.limma.mean", "d.normalized.limma.mean")]
rownames(stq_heat) <- paste0(rownames(stq), stq$names_site)
stq_heat <- stq_heat[, 2:4]
paletteLength <- 100
myBreaks <- c(seq(min(stq_heat, na.rm=T), 0, length.out=ceiling(paletteLength/2)+1),
seq(max(stq_heat, na.rm=T)/paletteLength, max(stq_heat, na.rm=T), length.out=floor(paletteLength/2)))
ks_heatmap_up <- pheatmap(stq_heat,
cellwidth = 20,
color=im_pal("heatmap1")(100),
breaks= myBreaks,
fontsize_row = 5,
border_color = NA,
na_col = "white", cluster_rows = T, cluster_cols = F,
labels_col = c(set.cond1, set.cond2, "APH1000nM/DMSO"),
)
ks_heatmap_up <- pheatmap(stq_heat,
cellwidth = 20,
color=im_pal("heatmap1")(100),
breaks= myBreaks,
fontsize_row = NA,
border_color = NA,
na_col = "white", cluster_rows = T, cluster_cols = F,
labels_col = c(set.cond1, set.cond2, "APH1000nM/DMSO"),
)
ks_heatmap_up <- pheatmap(stq_heat,
cellwidth = 20,
color=im_pal("heatmap1")(100),
breaks= myBreaks,
fontsize_row = 0,
border_color = NA,
na_col = "white", cluster_rows = T, cluster_cols = F,
labels_col = c(set.cond1, set.cond2, "APH1000nM/DMSO"),
)
ks_heatmap_up <- pheatmap(stq_heat,
cellwidth = 20,
color=im_pal("heatmap1")(100),
breaks= myBreaks,
annotation_row = F,
border_color = NA,
na_col = "white", cluster_rows = T, cluster_cols = F,
labels_col = c(set.cond1, set.cond2, "APH1000nM/DMSO"),
)
ks_heatmap_up <- pheatmap(stq_heat,
cellwidth = 20,
color=im_pal("heatmap1")(100),
breaks= myBreaks,
annotation_row = NA,
border_color = NA,
na_col = "white", cluster_rows = T, cluster_cols = F,
labels_col = c(set.cond1, set.cond2, "APH1000nM/DMSO"),
)
ks_heatmap_up <- pheatmap(stq_heat,
cellwidth = 20,
color=im_pal("heatmap1")(100),
breaks= myBreaks,
show_rownames = F,
border_color = NA,
na_col = "white", cluster_rows = T, cluster_cols = F,
labels_col = c(set.cond1, set.cond2, "APH1000nM/DMSO"),
)
nonstq <- subset(regulated, motif != "SQ" & motif!="TQ")
nonstq_heat <- nonstq[,c("names_site", "a.normalized.limma.mean", "b.normalized.limma.mean", "d.normalized.limma.mean")]
rownames(nonstq_heat) <- paste0(rownames(nonstq), nonstq$names_site)
nonstq_heat <- nonstq_heat[, 2:4]
paletteLength <- 100
myBreaks <- c(seq(min(nonstq_heat, na.rm=T), 0, length.out=ceiling(paletteLength/2)+1),
seq(max(nonstq_heat, na.rm=T)/paletteLength, max(nonstq_heat, na.rm=T), length.out=floor(paletteLength/2)))
ks_heatmap_up <- pheatmap(nonstq_heat,
cellwidth = 20,
color=im_pal("heatmap1")(100),
breaks= myBreaks,
show_rownames = F,
border_color = NA,
na_col = "white", cluster_rows = T, cluster_cols = F,
labels_col = c(set.cond1, set.cond2, "APH1000nM/DMSO"),
)
nonstq <- subset(regulated, motif != "SQ" & motif!="TQ")
nonstq_heat <- nonstq[,c("names_site", "a.normalized.limma.mean", "b.normalized.limma.mean", "d.normalized.limma.mean")]
rownames(nonstq_heat) <- paste0(rownames(nonstq), nonstq$names_site)
nonstq_heat <- nonstq_heat[, 2:4]
paletteLength <- 100
myBreaks <- c(seq(min(nonstq_heat, na.rm=T), 0, length.out=ceiling(paletteLength/2)+1),
seq(max(nonstq_heat, na.rm=T)/paletteLength, max(nonstq_heat, na.rm=T), length.out=floor(paletteLength/2)))
ks_heatmap_up <- pheatmap(nonstq_heat,
cellwidth = 20,
color=im_pal("heatmap1")(100),
breaks= myBreaks,
show_rownames = F,
border_color = NA,
na_col = "white", cluster_rows = T, cluster_cols = F,
labels_col = c(set.cond1, set.cond2, "APH1000nM/DMSO"),
)
paletteLength <- 100
myBreaks <- c(seq(min(stq_heat, na.rm=T), 0, length.out=ceiling(paletteLength/2)+1),
seq(max(stq_heat, na.rm=T)/paletteLength, max(stq_heat, na.rm=T), length.out=floor(paletteLength/2)))
ks_heatmap_up <- pheatmap(stq_heat,
cellwidth = 20,
color=im_pal("heatmap1")(100),
breaks= myBreaks,
show_rownames = F,
border_color = NA,
na_col = "white", cluster_rows = T, cluster_cols = F,
labels_col = c(set.cond1, set.cond2, "APH1000nM/DMSO"),
)
dev.copy2pdf(file="figures/stq_sites_heatmap.pdf")
paletteLength <- 100
myBreaks <- c(seq(min(nonstq_heat, na.rm=T), 0, length.out=ceiling(paletteLength/2)+1),
seq(max(nonstq_heat, na.rm=T)/paletteLength, max(nonstq_heat, na.rm=T), length.out=floor(paletteLength/2)))
ks_heatmap_up <- pheatmap(nonstq_heat,
cellwidth = 20,
color=im_pal("heatmap1")(100),
breaks= myBreaks,
show_rownames = F,
border_color = NA,
na_col = "white", cluster_rows = T, cluster_cols = F,
labels_col = c(set.cond1, set.cond2, "APH1000nM/DMSO"),
)
dev.copy2pdf(file="figures/nonstq_sites_heatmap.pdf")
kdms[, c("names_site", "a.normalized.limma.mean", "b.normalized.limma.mean", "d.normalized.limma.mean")]
kdms[, c("names_site", "Proteins", "Positions")]
kdms[, c("names_site", "Proteins", "Position.within.proteins")]
kdms[, c("names_site", "Proteins", "Position.within.protein")]
kdms[, c("names_site", "Proteins", "Positions.within.protein")]
kdms[, c("names_site", "Proteins", "Positions.within.proteins")]
kdms[, c("names_site", "Proteins", "Positions.within.proteins")]
impalettes <- list(
main  = imcols::im_cols("Chevalier3", "Dutch1", "Halifax1", "Lake2", "Lake3", "Lumina2", "Mint1", "Pale1", "Pine1", "Pine3", "Rush2", "Silver3", "Silver4"),
discrete1 = imcols::im_cols("Chevalier3", "Rush1", "Lake3", "Pine1", "Lumina2", "Silver4"),
discrete2 = imcols::im_cols("Chevalier3", "Rush1", "Lake3", "Pine1"),
discrete_two_colors= imcols::im_cols( "Rush1", "Lake3"),
heatmap1 = imcols::im_cols("Lake3", "Lake4","white", "Chevalier1", "Rush3"),
heatmap2  = imcols::im_cols("Lake3", "Chevalier3", "Rush2"),
heatmap3  = imcols::im_cols("Lake3", "Pale2", "Dutch1"),
heatmap4 = imcols::im_cols("Lake3", "white", "Rush3"),
heatmap_hot = imcols::im_cols("white", "Rush3"),
heatmap_cool = imcols::im_cols("Lake3", "white")
)
usethis::use_data(impalettes, overwrite = TRUE)
update_imcols <- function(){
devtools::unloadNamespace("imcols")
devtools::remove.packages("imcols")
devtools::install_github("belilab/imcols")
}
update_imcols()
update_imcols <- function(){
unloadNamespace("imcols")
devtools::remove.packages("imcols")
devtools::install_github("belilab/imcols")
}
update_imcols()
update_imcols <- function(){
unloadNamespace("imcols")
remove.packages("imcols")
devtools::install_github("belilab/imcols")
}
update_imcols()
library(imcols)
library(imcols)
unloadNamespace("imcols")
remove.packages("imcols")
devtools::install_github("belilab/imcols")
library(imcols)
load("C:/Users/Justus/AppData/Local/Temp/impalettes.rda")
unloadNamespace("imcols")
remove.packages("imcols")
impalettes <- list(
main  = imcols::im_cols("Chevalier3", "Dutch1", "Halifax1", "Lake2", "Lake3", "Lumina2", "Mint1", "Pale1", "Pine1", "Pine3", "Rush2", "Silver3", "Silver4"),
discrete1 = imcols::im_cols("Chevalier3", "Rush1", "Lake3", "Pine1", "Lumina2", "Silver4"),
discrete2 = imcols::im_cols("Chevalier3", "Rush1", "Lake3", "Pine1"),
discrete_two_colors= imcols::im_cols( "Rush1", "Lake3"),
heatmap1 = imcols::im_cols("Lake3", "Lake4","white", "Chevalier1", "Rush3"),
heatmap2  = imcols::im_cols("Lake3", "Chevalier3", "Rush2"),
heatmap3  = imcols::im_cols("Lake3", "Pale2", "Dutch1"),
heatmap4 = imcols::im_cols("Lake3", "white", "Rush3"),
heatmap_hot = imcols::im_cols("white", "Rush3"),
heatmap_cool = imcols::im_cols("Lake3", "white")
)
usethis::use_data(impalettes, overwrite = TRUE)
devtools::install_github("belilab/imcols")
library(imcols)
impalettes <- list(
main  = imcols::im_cols("Chevalier3", "Dutch1", "Halifax1", "Lake2", "Lake3", "Lumina2", "Mint1", "Pale1", "Pine1", "Pine3", "Rush2", "Silver3", "Silver4"),
discrete = imcols::im_cols("Chevalier3", "Dutch1", "Lake3", "Pine1", "Rush2", "Mint1"),
heatmap1 = imcols::im_cols("Lake3", "white", "Chevalier1", "Rush3"),
heatmap2  = imcols::im_cols("Lake3", "Chevalier3", "Rush2"),
heatmap4 = imcols::im_cols("Lake3", "white", "Rush3"),
heatmap_hot = imcols::im_cols("Chevalier3", "Rush2"),
heatmap_hot = imcols::im_cols("white", "Rush3"),
heatmap_cool = imcols::im_cols("Lake3", "Pine3")
heatmap_cool = imcols::im_cols("Lake3", "white")
)
impalettes <- list(
main  = imcols::im_cols("Chevalier3", "Dutch1", "Halifax1", "Lake2", "Lake3", "Lumina2", "Mint1", "Pale1", "Pine1", "Pine3", "Rush2", "Silver3", "Silver4"),
discrete = imcols::im_cols("Chevalier3", "Dutch1", "Lake3", "Pine1", "Rush2", "Mint1"),
heatmap1 = imcols::im_cols("Lake3", "white", "Chevalier1", "Rush3"),
heatmap2  = imcols::im_cols("Lake3", "Chevalier3", "Rush2"),
heatmap4 = imcols::im_cols("Lake3", "white", "Rush3"),
heatmap_hot = imcols::im_cols("Chevalier3", "Rush2"),
heatmap_hot = imcols::im_cols("white", "Rush3"),
heatmap_cool = imcols::im_cols("Lake3", "Pine3")
heatmap_cool = imcols::im_cols("Lake3", "white")
)
impalettes <- list(
main  = imcols::im_cols("Chevalier3", "Dutch1", "Halifax1", "Lake2", "Lake3", "Lumina2", "Mint1", "Pale1", "Pine1", "Pine3", "Rush2", "Silver3", "Silver4"),
discrete = imcols::im_cols("Chevalier3", "Dutch1", "Lake3", "Pine1", "Rush2", "Mint1"),
heatmap1 = imcols::im_cols("Lake3", "white", "Chevalier1", "Rush3"),
heatmap2  = imcols::im_cols("Lake3", "Chevalier3", "Rush2"),
heatmap4 = imcols::im_cols("Lake3", "white", "Rush3"),
heatmap_hot = imcols::im_cols("Chevalier3", "Rush2"),
heatmap_hot = imcols::im_cols("white", "Rush3"),
heatmap_cool = imcols::im_cols("Lake3", "Pine3")
heatmap_cool = imcols::im_cols("Lake3", "white"))
impalettes <- list(
main  = imcols::im_cols("Chevalier3", "Dutch1", "Halifax1", "Lake2", "Lake3", "Lumina2", "Mint1", "Pale1", "Pine1", "Pine3", "Rush2", "Silver3", "Silver4"),
discrete = imcols::im_cols("Chevalier3", "Dutch1", "Lake3", "Pine1", "Rush2", "Mint1"),
heatmap1 = imcols::im_cols("Lake3", "white", "Chevalier1", "Rush3"),
heatmap2  = imcols::im_cols("Lake3", "Chevalier3", "Rush2"),
heatmap4 = imcols::im_cols("Lake3", "white", "Rush3"),
heatmap_hot = imcols::im_cols("Chevalier3", "Rush2"),
heatmap_hot = imcols::im_cols("white", "Rush3"),
heatmap_cool = imcols::im_cols("Lake3", "Pine3"),
heatmap_cool = imcols::im_cols("Lake3", "white"))
unloadNamespace("imcols")
remove.packages("imcols")
devtools::install_github("belilab/imcols")
library(imcols)
load("C:/Users/Justus/AppData/Local/Temp/impalettes-1.rda")
unloadNamespace("imcols")
remove.packages("imcols")
devtools::install_github("belilab/imcols")
library(imcols)
im_cols(1)
impalettes <- list(
main  = imcols::im_cols("Chevalier3", "Dutch1", "Halifax1", "Lake2", "Lake3", "Lumina2", "Mint1", "Pale1", "Pine1", "Pine3", "Rush2", "Silver3", "Silver4"),
discrete1 = imcols::im_cols("Chevalier3", "Rush1", "Lake3", "Pine1", "Lumina2", "Silver4"),
discrete2 = imcols::im_cols("Chevalier3", "Rush1", "Lake3", "Pine1"),
discrete_two_colors= imcols::im_cols( "Rush1", "Lake3"),
heatmap1 = imcols::im_cols("Lake3", "Lake4","white", "Chevalier1", "Rush3"),
heatmap1 = imcols::im_cols("Lake3", "white", "Chevalier1", "Rush3"),
heatmap2  = imcols::im_cols("Lake3", "Chevalier3", "Rush2"),
heatmap3  = imcols::im_cols("Lake3", "Pale2", "Dutch1"),
heatmap4 = imcols::im_cols("Lake3", "white", "Rush3"),
heatmap_hot = imcols::im_cols("Chevalier3", "Rush2"),
heatmap_cool = imcols::im_cols("Lake3", "Pine3")
)
usethis::use_data(impalettes, overwrite = TRUE)
setwd("~/Bachelor/Github/imcols")
usethis::use_data(impalettes, overwrite = TRUE)
unloadNamespace("imcols")
remove.packages("imcols")
devtools::install_github("belilab/imcols")
library(imcols)
View(impalettes)
library(imcols)
library(imcols)
im_pal("discrete1")
im_pal("heatmap1")
impalettes
load("C:/Users/Justus/AppData/Local/Temp/impalettes-2.rda")
unloadNamespace("imcols")
remove.packages("imcols")
remove.packages("imcols")
devtools::install_github("belilab/imcols")
library(imcols)
impalettes
load("C:/Users/Justus/AppData/Local/Temp/imcolors.rda")
imcolors <- c(
Chevalier1 = "#FACA51",
Chevalier2 = "#D8A228",
Chevalier3 = "#E4C321",
Dutch1 = "#D2732B",
Halifax1 = "#654B64",
Halifax2 = "#967D7D",
Lake1 = "#4B647E",
Lake2 = "#19324B",
Lake3 = "#3189A3",
Lake4 = "#67A9B8",
Lumina1 = "#EDDAEB",
Lumina2 = "#AE8CAE",
Mint1 = "#B3DFD7",
Pale1 = "#F1C2A5",
Pale2 = "#F7ECC7",
Pine1 = "#639076",
Pine2 = "#365243",
Pine3 = "#13674D",
Plum1 = "#281C38",
Rush1 = "#E81D25",
Rush2 = "#BA2326",
Rush3 = "#E91E25",
Silver1 = "#647D96",
Silver2 = "#E1E2E1",
Silver3 = "#C9D6D5",
Silver4 = "#778C93",
white = "#FFFFFF",
black = "#000000")
usethis::use_data(imcolors, overwrite = TRUE)
library(imcols)
impalettes
im_pal("heatmap1")
